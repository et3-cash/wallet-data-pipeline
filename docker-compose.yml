services:
  oltp-db:
    image: postgres:14
    container_name: oltp-db
    ports:
      - '5440:5432'
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: oltp_db
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    networks:
      - airflow_network

  dw-db:
    image: postgres:14
    container_name: dw-db
    ports:
      - '5441:5432'
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dw_db
    volumes:
      - ./datawarehouse:/docker-entrypoint-initdb.d
    networks:
      - airflow_network

  airflow:
    image: apache/airflow:2.7.0
    container_name: airflow
    ports:
      - '8088:8080'
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__CORE__EXECUTOR: 'LocalExecutor' # Ensure the LocalExecutor is used
      AIRFLOW_HOME: /opt/airflow
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'True'
    volumes:
      - ./etl/dags:/opt/airflow/dags
      - ./etl/scripts:/opt/airflow/scripts
      - ./etl/edges:/opt/airflow/edges
      - ./airflow/logs:/opt/airflow/logs # Optional: To persist logs
      - ./db/data:/opt/airflow/dags/data # Mount the db folder so Airflow can access it
    networks:
      - airflow_network
    command: >
      bash -c "airflow db init && 
               python /opt/airflow/scripts/setup_connections.py && 
               airflow scheduler & airflow webserver"
    depends_on:
      - oltp-db
      - dw-db
      - airflow-db
    # Add a health check to wait for the database to be ready
    healthcheck:
      test: ['CMD', 'pg_isready', '-h', 'oltp-db', '-p', '5432', '-U', 'admin']
      retries: 2
      interval: 5s
      start_period: 20s
      timeout: 5s
    restart: always

  airflow-db:
    image: postgres:14
    container_name: airflow-db
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - '5442:5432'
    volumes:
      - ./db_data:/var/lib/postgresql/data
    networks:
      - airflow_network

volumes:
  pg_data:
  dw_data:
  airflow_logs: # Add this to persist logs across container restarts

networks:
  airflow_network:
    driver: bridge
